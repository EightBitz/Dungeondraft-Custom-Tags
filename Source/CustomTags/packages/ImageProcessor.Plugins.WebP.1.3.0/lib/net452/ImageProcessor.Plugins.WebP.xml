<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ImageProcessor.Plugins.WebP</name>
    </assembly>
    <members>
        <member name="T:ImageProcessor.Plugins.WebP.Imaging.Formats.WebPFormat">
            <summary>
            Provides the necessary information to support webp images.
            Adapted from <see href="http://groups.google.com/a/webmproject.org/forum/#!topic/webp-discuss/1coeidT0rQU"/>
            by Jose M. Pi√±eiro
            </summary>
        </member>
        <member name="P:ImageProcessor.Plugins.WebP.Imaging.Formats.WebPFormat.FileHeaders">
            <summary>
            Gets the file headers.
            </summary>
        </member>
        <member name="P:ImageProcessor.Plugins.WebP.Imaging.Formats.WebPFormat.FileExtensions">
            <summary>
            Gets the list of file extensions.
            </summary>
        </member>
        <member name="P:ImageProcessor.Plugins.WebP.Imaging.Formats.WebPFormat.MimeType">
            <summary>
            Gets the standard identifier used on the Internet to indicate the type of data that a file contains.
            </summary>
        </member>
        <member name="P:ImageProcessor.Plugins.WebP.Imaging.Formats.WebPFormat.ImageFormat">
            <summary>
            Gets the file format of the image. 
            </summary>
        </member>
        <member name="M:ImageProcessor.Plugins.WebP.Imaging.Formats.WebPFormat.ApplyProcessor(System.Func{ImageProcessor.ImageFactory,System.Drawing.Image},ImageProcessor.ImageFactory)">
            <summary>
            Applies the given processor the current image.
            </summary>
            <param name="processor">The processor delegate.</param>
            <param name="factory">The <see cref="T:ImageProcessor.ImageFactory" />.</param>
        </member>
        <member name="M:ImageProcessor.Plugins.WebP.Imaging.Formats.WebPFormat.Load(System.IO.Stream)">
            <summary>
            Decodes the image to process.
            </summary>
            <param name="stream">
            The <see cref="T:System.IO.stream" /> containing the image information.
            </param>
            <returns>
            The <see cref="T:System.Drawing.Image" />.
            </returns>
        </member>
        <member name="M:ImageProcessor.Plugins.WebP.Imaging.Formats.WebPFormat.Save(System.IO.Stream,System.Drawing.Image,System.Int64)">
            <summary>
            Saves the current image to the specified output stream.
            </summary>
            <param name="stream">
            The <see cref="T:System.IO.Stream"/> to save the image information to.
            </param>
            <param name="image">
            The <see cref="T:System.Drawing.Image"/> to save.
            </param>
            <param name="bitDepth">
            The color depth in number of bits per pixel to save the image with.
            </param>
            <returns>
            The <see cref="T:System.Drawing.Image"/>.
            </returns>
        </member>
        <member name="M:ImageProcessor.Plugins.WebP.Imaging.Formats.WebPFormat.Save(System.String,System.Drawing.Image,System.Int64)">
            <summary>
            Saves the current image to the specified file path.
            </summary>
            <param name="path">The path to save the image to.</param>
            <param name="image"> 
            The <see cref="T:System.Drawing.Image"/> to save.
            </param>
            <param name="bitDepth">
            The color depth in number of bits per pixel to save the image with.
            </param>
            <returns>
            The <see cref="T:System.Drawing.Image"/>.
            </returns>
        </member>
        <member name="M:ImageProcessor.Plugins.WebP.Imaging.Formats.WebPFormat.Decode(System.Byte[])">
            <summary>
            Decodes a WebP image
            </summary>
            <param name="webpData">The data to uncompress.</param>
            <returns>
            The <see cref="T:System.Drawing.Bitmap" />.
            </returns>
        </member>
        <member name="M:ImageProcessor.Plugins.WebP.Imaging.Formats.WebPFormat.EncodeLossly(System.Drawing.Bitmap,System.Int32,System.Byte[]@)">
            <summary>
            Lossy encodes the image in bitmap.
            </summary>
            <param name="bitmap">
            Bitmap with the image
            </param>
            <param name="quality">
            Quality. 0 = minimum ... 100 = maximum quality
            </param>
            <param name="webpData">
            The byte array containing the encoded image data.
            </param>
            <returns>
            True if success; False otherwise
            </returns>
        </member>
        <member name="M:ImageProcessor.Plugins.WebP.Imaging.Formats.WebPFormat.EncodeLosslessly(System.Drawing.Bitmap,System.Byte[]@)">
            <summary>
            Losslessly encodes the image in bitmap.
            </summary>
            <param name="bitmap">
            Bitmap with the image
            </param>
            <param name="webpData">
            The byte array containing the encoded image data.
            </param>
            <returns>
            True if success; False otherwise
            </returns>
        </member>
        <member name="T:ImageProcessor.Plugins.WebP.Imaging.Formats.NativeMethods">
            <summary>
            Provides access to unmanaged native methods.
            </summary>
        </member>
        <member name="M:ImageProcessor.Plugins.WebP.Imaging.Formats.NativeMethods.#cctor">
            <summary>
            Initializes static members of the <see cref="T:ImageProcessor.Plugins.WebP.Imaging.Formats.NativeMethods"/> class.
            </summary>
        </member>
        <member name="M:ImageProcessor.Plugins.WebP.Imaging.Formats.NativeMethods.WebPGetInfo(System.IntPtr,System.UInt32,System.Int32@,System.Int32@)">
            <summary>
            Validate the WebP image header and retrieve the image height and width. Pointers *width and *height can be passed NULL if deemed irrelevant
            </summary>
            <param name="data">
            Pointer to WebP image data
            </param>
            <param name="dataSize">
            This is the size of the memory block pointed to by data containing the image data
            </param>
            <param name="width">
            The width range is limited currently from 1 to 16383
            </param>
            <param name="height">
            The height range is limited currently from 1 to 16383
            </param>
            <returns>
            1 if success, otherwise error code returned in the case of (a) formatting error(s).
            </returns>
        </member>
        <member name="M:ImageProcessor.Plugins.WebP.Imaging.Formats.NativeMethods.WebPDecodeBGRAInto(System.IntPtr,System.UInt32,System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Decode WEBP image pointed to by *data and returns BGR samples into a pre-allocated buffer
            </summary>
            <param name="data">
            Pointer to WebP image data
            </param>
            <param name="dataSize">
            This is the size of the memory block pointed to by data containing the image data
            </param>
            <param name="outputBuffer">
            Pointer to decoded WebP image
            </param>
            <param name="outputBufferSize">
            Size of allocated buffer
            </param>
            <param name="outputStride">
            Specifies the distance between scan-lines
            </param>
            <returns>
            output_buffer if function succeeds; NULL otherwise
            </returns>
        </member>
        <member name="M:ImageProcessor.Plugins.WebP.Imaging.Formats.NativeMethods.WebPEncodeBGRA(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Single,System.IntPtr@)">
            <summary>
            Lossy encoding images pointed to by *data in WebP format
            </summary>
            <param name="rgb">
            Pointer to RGB image data
            </param>
            <param name="width">
            The width range is limited currently from 1 to 16383
            </param>
            <param name="height">
            The height range is limited currently from 1 to 16383
            </param>
            <param name="stride">
            The stride.
            </param>
            <param name="qualityFactor">
            Ranges from 0 (lower quality) to 100 (highest quality). Controls the loss and quality during compression
            </param>
            <param name="output">
            output_buffer with WebP image
            </param>
            <returns>
            Size of WebP Image
            </returns>
        </member>
        <member name="M:ImageProcessor.Plugins.WebP.Imaging.Formats.NativeMethods.WebPEncodeLosslessBGRA(System.IntPtr,System.Int32,System.Int32,System.Int32,System.IntPtr@)">
            <summary>
            Lossless encoding of images pointed to by *data in WebP format
            </summary>
            <param name="rgb">
            Pointer to RGB image data
            </param>
            <param name="width">
            The width range is limited currently from 1 to 16383
            </param>
            <param name="height">
            The height range is limited currently from 1 to 16383
            </param>
            <param name="stride">
            The stride.
            </param>
            <param name="output">
            output_buffer with WebP image
            </param>
            <returns>
            Size of WebP Image
            </returns>
        </member>
        <member name="M:ImageProcessor.Plugins.WebP.Imaging.Formats.NativeMethods.WebPFree(System.IntPtr)">
            <summary>
            Frees the unmanaged memory.
            </summary>
            <param name="pointer">
            The pointer.
            </param>
            <returns>
            1 if success, otherwise error code returned in the case of (a) error(s).
            </returns>
        </member>
    </members>
</doc>
